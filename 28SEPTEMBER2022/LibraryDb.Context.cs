//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Library_CB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LibraryEntities : DbContext
    {
        public LibraryEntities()
            : base("name=LibraryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Book> Books { get; set; }
        public virtual DbSet<Book_C> Book_C { get; set; }
        public virtual DbSet<Issue> Issues { get; set; }
        public virtual DbSet<Issue_C> Issue_C { get; set; }
        public virtual DbSet<Member> Members { get; set; }
        public virtual DbSet<Member_C> Member_C { get; set; }
        public virtual DbSet<Member102> Member102 { get; set; }
        public virtual DbSet<Pricegreaterthan500> Pricegreaterthan500 { get; set; }
        public virtual DbSet<review> reviews { get; set; }
        public virtual DbSet<review1> review1 { get; set; }
        public virtual DbSet<User_Constraints> User_Constraints { get; set; }
        public virtual DbSet<User_Constraints1> User_Constraints1 { get; set; }
    
        [DbFunction("LibraryEntities", "fn_Booklist")]
        public virtual IQueryable<fn_Booklist_Result> fn_Booklist(string user_id, string password)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Booklist_Result>("[LibraryEntities].[fn_Booklist](@user_id, @password)", user_idParameter, passwordParameter);
        }
    
        public virtual int change_return_status(Nullable<decimal> book_no, string comments)
        {
            var book_noParameter = book_no.HasValue ?
                new ObjectParameter("book_no", book_no) :
                new ObjectParameter("book_no", typeof(decimal));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("change_return_status", book_noParameter, commentsParameter);
        }
    
        public virtual int change_return_statuss(Nullable<decimal> id, string comments)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(decimal));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("change_return_statuss", idParameter, commentsParameter);
        }
    
        public virtual int sp_UserLogin(string user_id, string password, ObjectParameter book_no, ObjectParameter book_name, ObjectParameter author, ObjectParameter cost, ObjectParameter category)
        {
            var user_idParameter = user_id != null ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UserLogin", user_idParameter, passwordParameter, book_no, book_name, author, cost, category);
        }
    
        public virtual int UpdateBookDetails(Nullable<decimal> book_id, string book_name, string author, Nullable<decimal> cost, string category)
        {
            var book_idParameter = book_id.HasValue ?
                new ObjectParameter("book_id", book_id) :
                new ObjectParameter("book_id", typeof(decimal));
    
            var book_nameParameter = book_name != null ?
                new ObjectParameter("book_name", book_name) :
                new ObjectParameter("book_name", typeof(string));
    
            var authorParameter = author != null ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(string));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("cost", cost) :
                new ObjectParameter("cost", typeof(decimal));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBookDetails", book_idParameter, book_nameParameter, authorParameter, costParameter, categoryParameter);
        }
    }
}
